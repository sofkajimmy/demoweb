
trigger:
- master


stages:
- stage: 'Integracion_Continua'
  pool:
    vmImage: ubuntu-latest
  variables:
    - group: sonarcloud
  jobs:
    - job: 'IC'
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'
        displayName: 'Install Node.js'

      - script: |
          npm install
          npm run build
        displayName: 'Build'

      - task: Docker@2
        inputs:
          containerRegistry: 'dockerP'
          repository: 'cabunga/demoweb'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'

      - script: |    
          npm run test
        displayName: 'Unit test'

      - script: |
          echo " ---  $organization --  $projectKey $url $login"
          sed -i "s~_Organization_~$(organization)~" sonar-project.properties
          sed -i "s~_ProjectKey_~$(projectKey)~" sonar-project.properties
          sed -i "s~_Url_~$(url)~" sonar-project.properties
          sed -i "s~_Login_~$(login)~" sonar-project.properties
          cat sonar-project.properties
          npm run sonar
        displayName: 'Code Analisys'
- stage: 'Despliegue_Continuo'
  pool:
   vmImage: ubuntu-latest  
  jobs:
    - job: 'CD'
      steps:
        
        - task: Bash@3
          displayName: 'Deploy App'
          inputs:
            targetType: 'inline'
            script: |
              docker run -d -p  81:80 cabunga/demoweb:$(Build.BuildId)

        - task: Bash@3
          displayName: 'Functional Test'
          inputs:
            targetType: 'inline'
            script: |
              git clone https://github.com/sofkajimmy/aceptestmvn.git && cd aceptestmvn
              ls && chmod +x run.sh
              ./run.sh
        - task: Bash@3
          displayName: 'Performance Test'
          inputs:
            targetType: 'inline'
            script: |
              git clone https://github.com/sofkajimmy/performancetest.git && cd performancetest
              ls && chmod +x test.sh
              ./test.sh
        - task: owaspzap@1
          inputs:
            scantype: 'targetedScan'
            url: 'https://blazedemo.com/'
            port: '443'
        - task: DeleteFiles@1
          displayName: Clean workspace
          inputs:              
              Contents: '**/*'