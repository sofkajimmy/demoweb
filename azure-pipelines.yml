
trigger:
- master


stages:
- stage: 'Integracion_Continua'
  pool:
    vmImage: ubuntu-latest
  variables:
    - group: sonarcloud
  jobs:
    - job: 'IC'
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'
        displayName: 'Install Node.js'

      - script: |
          npm install
          npm run build
        displayName: 'Build'


      - script: |    
          npm run test
        displayName: 'Unit test'

      - script: |
          echo " ---  $organization --  $projectKey $url $login"
          sed -i "s~_Organization_~$(organization)~" sonar-project.properties
          sed -i "s~_ProjectKey_~$(projectKey)~" sonar-project.properties
          sed -i "s~_Url_~$(url)~" sonar-project.properties
          sed -i "s~_Login_~$(login)~" sonar-project.properties
          cat sonar-project.properties
          npm run sonar
        displayName: 'Code Analisys'
      - task: Docker@2
        inputs:
          containerRegistry: 'dockerP'
          repository: 'kamentsa/demoweb'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'

- stage: 'Entrega_Continua'
  pool:
   name: demoterra
   #vmImage: ubuntu-latest  
  variables:
    - group: azure-suscription
  jobs:
    - job: 'CD'
      #workspace:
      #  clean: all
      steps:
        - checkout: git://MejoraContinua/iac_vm
        - bash: |            
            pwd
            cd terraform            
            echo 'azure_client_id=$(azure_client_id)
            azure_client_secret=$(azure_client_secret)
            azure_subscription_id=$(azure_subscription_id)
            azure_tenant_id=$(azure_tenant_id)'>terraform.tfvars
            cat terraform.tfvars
            terraform init
            terraform plan
            terraform apply -auto-approve          
          displayName: 'IaC VM'
        - task: Bash@3
          displayName: 'Deploy App'
          inputs:
            targetType: 'inline'
            script: |
              docker run -d -p  81:80 kamentsa/demoweb:$(Build.BuildId)

        - task: Bash@3
          displayName: 'Functional Test'
          inputs:
            targetType: 'inline'
            script: |
              git clone -b develop https://github.com/sofkajimmy/aceptestmvn.git && cd aceptestmvn
              ls && chmod +x run.sh
              ./run.sh
        - task: Bash@3
          displayName: 'Performance Test'
          inputs:
            targetType: 'inline'
            script: |
              git clone https://github.com/sofkajimmy/performancetest.git && cd performancetest
              ls && chmod +x test.sh
              ./test.sh
        - task: owaspzap@1
          inputs:
            scantype: 'targetedScan'
            url: 'https://blazedemo.com'
            port: '443'
- stage: 'Deploy_Continuo'
  pool:
   vmImage: ubuntu-latest  
  jobs:
    - job: 'CD'
      steps:
        
        - task: Bash@3
          displayName: 'Deploy App'
          inputs:
            targetType: 'inline'
            script: |
              docker run -d -p  81:80 kamentsa/demoweb:$(Build.BuildId)
        #- task: SmokeWebTest@1
        #  inputs:
        #    url: 'https://blazedemo.com/'
        #    expectedReturnCode: '200'
        #    timeout: '100'